export const options = {
  federationPublisherModulesOptions: [
    { label: 'Pleroma.Web.ActivityPub.Publisher', value: 'Pleroma.Web.ActivityPub.Publisher' },
    { label: 'Pleroma.Web.Websub', value: 'Pleroma.Web.Websub' },
    { label: 'Pleroma.Web.Salmon', value: 'Pleroma.Web.Salmon' }],
  rewritePolicyOptions: [
    { label: 'NoOpPolicy', value: 'Pleroma.Web.ActivityPub.MRF.NoOpPolicy', expl: 'NoOpPolicy: Doesn’t modify activities (default)' },
    { label: 'DropPolicy', value: 'Pleroma.Web.ActivityPub.MRF.DropPolicy', expl: 'DropPolicy: Drops all activities. It generally doesn’t makes sense to use in production' },
    { label: 'SimplePolicy', value: 'Pleroma.Web.ActivityPub.MRF.SimplePolicy', expl: 'SimplePolicy: Restrict the visibility of activities from certains instances (See :mrf_simple section)' },
    { label: 'TagPolicy', value: 'Pleroma.Web.ActivityPub.MRF.TagPolicy', expl: 'Applies policies to individual users based on tags, which can be set using pleroma-fe/admin-fe/any other app that supports Pleroma Admin API. For example it allows marking posts from individual users nsfw (sensitive)' },
    { label: 'SubchainPolicy', value: 'Pleroma.Web.ActivityPub.MRF.SubchainPolicy', expl: 'Selectively runs other MRF policies when messages match (see :mrf_subchain section)' },
    { label: 'RejectNonPublic', value: 'Pleroma.Web.ActivityPub.MRF.RejectNonPublic', expl: 'RejectNonPublic: Drops posts with non-public visibility settings (See :mrf_rejectnonpublic section)' },
    { label: 'EnsureRePrepended', value: 'Pleroma.Web.ActivityPub.MRF.EnsureRePrepended', expl: 'EnsureRePrepended: Rewrites posts to ensure that replies to posts with subjects do not have an identical subject and instead begin with re:' },
    { label: 'AntiLinkSpamPolicy', value: 'Pleroma.Web.ActivityPub.MRF.AntiLinkSpamPolicy', expl: 'Rejects posts from likely spambots by rejecting posts from new users that contain links' },
    { label: 'MediaProxyWarmingPolicy', value: 'Pleroma.Web.ActivityPub.MRF.MediaProxyWarmingPolicy', expl: 'Crawls attachments using their MediaProxy URLs so that the MediaProxy cache is primed' },
    { label: 'MentionPolicy', value: 'Pleroma.Web.ActivityPub.MRF.MentionPolicy', expl: 'Drops posts mentioning configurable users. (see :mrf_mention section)' }
  ],
  quarantinedInstancesOptions: [],
  autofollowedNicknamesOptions: [],
  uriSchemesOptions: [
    { label: 'https', value: 'https' },
    { label: 'http', value: 'http' },
    { label: 'dat', value: 'dat' },
    { label: 'dweb', value: 'dweb' },
    { label: 'gopher', value: 'gopher' },
    { label: 'ipfs', value: 'ipfs' },
    { label: 'ipns', value: 'ipns' },
    { label: 'irc', value: 'irc' },
    { label: 'ircs', value: 'ircs' },
    { label: 'magnet', value: 'magnet' },
    { label: 'mailto', value: 'mailto' },
    { label: 'mumble', value: 'mumble' },
    { label: 'ssb', value: 'ssb' },
    { label: 'xmpp', value: 'xmpp' }],
  themeOptions: [
    { label: 'pleroma-dark', value: 'pleroma-dark' },
    { label: 'pleroma-light', value: 'pleroma-light' },
    { label: 'classic-dark', value: 'classic-dark' },
    { label: 'bird', value: 'bird' },
    { label: 'ir-black', value: 'ir-black' },
    { label: 'monokai', value: 'monokai' },
    { label: 'mammal', value: 'mammal' },
    { label: 'redmond-xx', value: 'redmond-xx' },
    { label: 'redmond-xx-se', value: 'redmond-xx-se' },
    { label: 'redmond-xxi', value: 'redmond-xxi' },
    { label: 'breezy-dark', value: 'breezy-dark' },
    { label: 'breezy-light', value: 'breezy-light' }],
  instrumentersOptions: [{ label: 'Pleroma.Web.Endpoint.Instrumenter', value: 'Pleroma.Web.Endpoint.Instrumenter' }],
  extraCookieAttrsOptions: [{ label: 'SameSite=Lax', value: 'SameSite=Lax' }],
  hackneyPoolsOptions: [{ label: 'Federation', value: ':federation', max_connections: 50, timeout: 150000 },
    { label: 'Media', value: ':media', max_connections: 50, timeout: 150000 },
    { label: 'Upload', value: ':upload', max_connections: 25, timeout: 300000 }],
  whitelistedContentTypesOptions: [{ label: 'image/gif', value: 'image/gif' },
    { label: 'image/jpeg', value: 'image/jpeg' },
    { label: 'image/jpg', value: 'image/jpg' },
    { label: 'image/png', value: 'image/png' },
    { label: 'image/svg+xml', value: 'image/svg+xml' },
    { label: 'audio/mpeg', value: 'audio/mpeg' },
    { label: 'audio/mp3', value: 'audio/mp3' },
    { label: 'video/webm', value: 'video/webm' },
    { label: 'video/mp4', value: 'video/mp4' },
    { label: 'video/quicktime', value: 'video/quicktime' }],
  mogrifyActionsOptions: [{ label: 'strip', value: 'strip' }, { label: 'auto-orient', value: 'auto-orient' }],
  adapterOptions: [
    { label: 'Swoosh.Adapters.Sendmail', value: 'Swoosh.Adapters.Sendmail' },
    { label: 'Swoosh.Adapters.SMTP', value: 'Swoosh.Adapters.SMTP' },
    { label: 'Swoosh.Adapters.Sendgrid', value: 'Swoosh.Adapters.Sendgrid' },
    { label: 'Swoosh.Adapters.Mandrill', value: 'Swoosh.Adapters.Mandrill' },
    { label: 'Swoosh.Adapters.Mailgun', value: 'Swoosh.Adapters.Mailgun' },
    { label: 'Swoosh.Adapters.Mailjet', value: 'Swoosh.Adapters.Mailjet' },
    { label: 'Swoosh.Adapters.Postmark', value: 'Swoosh.Adapters.Postmark' },
    { label: 'Swoosh.Adapters.SparkPost', value: 'Swoosh.Adapters.SparkPost' },
    { label: 'Swoosh.Adapters.AmazonSES', value: 'Swoosh.Adapters.AmazonSES' },
    { label: 'Swoosh.Adapters.Dyn', value: 'Swoosh.Adapters.Dyn' },
    { label: 'Swoosh.Adapters.SocketLabs', value: 'Swoosh.Adapters.SocketLabs' },
    { label: 'Swoosh.Adapters.Gmail', value: 'Swoosh.Adapters.Gmail' },
    { label: 'Swoosh.Adapters.Local', value: 'Swoosh.Adapters.Local' }
  ],
  loggerBackendsOptions: [
    { label: 'Console // log to stdout', value: JSON.stringify(':console') },
    { label: 'Ex_syslogger // log to syslog', value: JSON.stringify({ 'tuple': ['ExSyslogger', ':ex_syslogger'] }) },
    { label: 'Quack.Logger // log to Slack', value: JSON.stringify('Quack.Logger') }
  ],
  restrictedNicknamesOptions: [
    { value: '.well-known' },
    { value: '~' },
    { value: 'about' },
    { value: 'activities' },
    { value: 'api' },
    { value: 'auth' },
    { value: 'check_password' },
    { value: 'dev' },
    { value: 'friend-requests' },
    { value: 'inbox' },
    { value: 'internal' },
    { value: 'main' },
    { value: 'media' },
    { value: 'nodeinfo' },
    { value: 'notice' },
    { value: 'oauth' },
    { value: 'objects' },
    { value: 'ostatus_subscribe' },
    { value: 'pleroma' },
    { value: 'proxy' },
    { value: 'push' },
    { value: 'registration' },
    { value: 'relay' },
    { value: 'settings' },
    { value: 'status' },
    { value: 'tag' },
    { value: 'user-search' },
    { value: 'user_exists' },
    { value: 'users' },
    { value: 'web' }
  ]
}
